import {
  __commonJS
} from "./chunk-G3PMV62Z.js";

// node_modules/vue-countup/dist/vue-count-up.js
var require_vue_count_up = __commonJS({
  "node_modules/vue-countup/dist/vue-count-up.js"(exports, module) {
    (function webpackUniversalModuleDefinition(root, factory) {
      if (typeof exports === "object" && typeof module === "object")
        module.exports = factory();
      else if (typeof define === "function" && define.amd)
        define([], factory);
      else if (typeof exports === "object")
        exports["VueCountUp"] = factory();
      else
        root["VueCountUp"] = factory();
    })(exports, function() {
      return (
        /******/
        function(modules) {
          var installedModules = {};
          function __webpack_require__(moduleId) {
            if (installedModules[moduleId])
              return installedModules[moduleId].exports;
            var module2 = installedModules[moduleId] = {
              /******/
              exports: {},
              /******/
              id: moduleId,
              /******/
              loaded: false
              /******/
            };
            modules[moduleId].call(module2.exports, module2, module2.exports, __webpack_require__);
            module2.loaded = true;
            return module2.exports;
          }
          __webpack_require__.m = modules;
          __webpack_require__.c = installedModules;
          __webpack_require__.p = "";
          return __webpack_require__(0);
        }([
          /* 0 */
          /***/
          function(module2, exports2, __webpack_require__) {
            "use strict";
            Object.defineProperty(exports2, "__esModule", {
              value: true
            });
            exports2.install = install;
            var _VueCountUp = __webpack_require__(1);
            var _VueCountUp2 = _interopRequireDefault(_VueCountUp);
            function _interopRequireDefault(obj) {
              return obj && obj.__esModule ? obj : { default: obj };
            }
            function install(Vue) {
              Vue.component("vuecountup", _VueCountUp2.default);
            }
          },
          /* 1 */
          /***/
          function(module2, exports2, __webpack_require__) {
            var __vue_script__, __vue_template__;
            __webpack_require__(2);
            __vue_script__ = __webpack_require__(6);
            if (__vue_script__ && __vue_script__.__esModule && Object.keys(__vue_script__).length > 1) {
              console.warn("[vue-loader] src\\VueCountUp.vue: named exports in *.vue files are ignored.");
            }
            __vue_template__ = __webpack_require__(7);
            module2.exports = __vue_script__ || {};
            if (module2.exports.__esModule) module2.exports = module2.exports.default;
            if (__vue_template__) {
              (typeof module2.exports === "function" ? module2.exports.options || (module2.exports.options = {}) : module2.exports).template = __vue_template__;
            }
            if (false) {
              (function() {
                module2.hot.accept();
                var hotAPI = null;
                hotAPI.install(null, true);
                if (!hotAPI.compatible) return;
                var id = "C:\\xampp\\htdocs\\_new_development\\_Bower_Packages\\vue-countup\\src\\VueCountUp.vue";
                if (!module2.hot.data) {
                  hotAPI.createRecord(id, module2.exports);
                } else {
                  hotAPI.update(id, module2.exports, __vue_template__);
                }
              })();
            }
          },
          /* 2 */
          /***/
          function(module2, exports2, __webpack_require__) {
            var content = __webpack_require__(3);
            if (typeof content === "string") content = [[module2.id, content, ""]];
            var update = __webpack_require__(5)(content, {});
            if (content.locals) module2.exports = content.locals;
            if (false) {
              if (!content.locals) {
                module2.hot.accept("!!./../node_modules/css-loader/index.js!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./VueCountUp.vue", function() {
                  var newContent = null;
                  if (typeof newContent === "string") newContent = [[module2.id, newContent, ""]];
                  update(newContent);
                });
              }
              module2.hot.dispose(function() {
                update();
              });
            }
          },
          /* 3 */
          /***/
          function(module2, exports2, __webpack_require__) {
            exports2 = module2.exports = __webpack_require__(4)();
            exports2.push([module2.id, "\n", ""]);
          },
          /* 4 */
          /***/
          function(module2, exports2) {
            module2.exports = function() {
              var list = [];
              list.toString = function toString() {
                var result = [];
                for (var i = 0; i < this.length; i++) {
                  var item = this[i];
                  if (item[2]) {
                    result.push("@media " + item[2] + "{" + item[1] + "}");
                  } else {
                    result.push(item[1]);
                  }
                }
                return result.join("");
              };
              list.i = function(modules, mediaQuery) {
                if (typeof modules === "string")
                  modules = [[null, modules, ""]];
                var alreadyImportedModules = {};
                for (var i = 0; i < this.length; i++) {
                  var id = this[i][0];
                  if (typeof id === "number")
                    alreadyImportedModules[id] = true;
                }
                for (i = 0; i < modules.length; i++) {
                  var item = modules[i];
                  if (typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
                    if (mediaQuery && !item[2]) {
                      item[2] = mediaQuery;
                    } else if (mediaQuery) {
                      item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
                    }
                    list.push(item);
                  }
                }
              };
              return list;
            };
          },
          /* 5 */
          /***/
          function(module2, exports2, __webpack_require__) {
            var stylesInDom = {}, memoize = function(fn) {
              var memo;
              return function() {
                if (typeof memo === "undefined") memo = fn.apply(this, arguments);
                return memo;
              };
            }, isOldIE = memoize(function() {
              return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
            }), getHeadElement = memoize(function() {
              return document.head || document.getElementsByTagName("head")[0];
            }), singletonElement = null, singletonCounter = 0, styleElementsInsertedAtTop = [];
            module2.exports = function(list, options) {
              if (false) {
                if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
              }
              options = options || {};
              if (typeof options.singleton === "undefined") options.singleton = isOldIE();
              if (typeof options.insertAt === "undefined") options.insertAt = "bottom";
              var styles = listToStyles(list);
              addStylesToDom(styles, options);
              return function update(newList) {
                var mayRemove = [];
                for (var i = 0; i < styles.length; i++) {
                  var item = styles[i];
                  var domStyle = stylesInDom[item.id];
                  domStyle.refs--;
                  mayRemove.push(domStyle);
                }
                if (newList) {
                  var newStyles = listToStyles(newList);
                  addStylesToDom(newStyles, options);
                }
                for (var i = 0; i < mayRemove.length; i++) {
                  var domStyle = mayRemove[i];
                  if (domStyle.refs === 0) {
                    for (var j = 0; j < domStyle.parts.length; j++)
                      domStyle.parts[j]();
                    delete stylesInDom[domStyle.id];
                  }
                }
              };
            };
            function addStylesToDom(styles, options) {
              for (var i = 0; i < styles.length; i++) {
                var item = styles[i];
                var domStyle = stylesInDom[item.id];
                if (domStyle) {
                  domStyle.refs++;
                  for (var j = 0; j < domStyle.parts.length; j++) {
                    domStyle.parts[j](item.parts[j]);
                  }
                  for (; j < item.parts.length; j++) {
                    domStyle.parts.push(addStyle(item.parts[j], options));
                  }
                } else {
                  var parts = [];
                  for (var j = 0; j < item.parts.length; j++) {
                    parts.push(addStyle(item.parts[j], options));
                  }
                  stylesInDom[item.id] = { id: item.id, refs: 1, parts };
                }
              }
            }
            function listToStyles(list) {
              var styles = [];
              var newStyles = {};
              for (var i = 0; i < list.length; i++) {
                var item = list[i];
                var id = item[0];
                var css = item[1];
                var media = item[2];
                var sourceMap = item[3];
                var part = { css, media, sourceMap };
                if (!newStyles[id])
                  styles.push(newStyles[id] = { id, parts: [part] });
                else
                  newStyles[id].parts.push(part);
              }
              return styles;
            }
            function insertStyleElement(options, styleElement) {
              var head = getHeadElement();
              var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
              if (options.insertAt === "top") {
                if (!lastStyleElementInsertedAtTop) {
                  head.insertBefore(styleElement, head.firstChild);
                } else if (lastStyleElementInsertedAtTop.nextSibling) {
                  head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
                } else {
                  head.appendChild(styleElement);
                }
                styleElementsInsertedAtTop.push(styleElement);
              } else if (options.insertAt === "bottom") {
                head.appendChild(styleElement);
              } else {
                throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
              }
            }
            function removeStyleElement(styleElement) {
              styleElement.parentNode.removeChild(styleElement);
              var idx = styleElementsInsertedAtTop.indexOf(styleElement);
              if (idx >= 0) {
                styleElementsInsertedAtTop.splice(idx, 1);
              }
            }
            function createStyleElement(options) {
              var styleElement = document.createElement("style");
              styleElement.type = "text/css";
              insertStyleElement(options, styleElement);
              return styleElement;
            }
            function addStyle(obj, options) {
              var styleElement, update, remove;
              if (options.singleton) {
                var styleIndex = singletonCounter++;
                styleElement = singletonElement || (singletonElement = createStyleElement(options));
                update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
                remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
              } else {
                styleElement = createStyleElement(options);
                update = applyToTag.bind(null, styleElement);
                remove = function() {
                  removeStyleElement(styleElement);
                };
              }
              update(obj);
              return function updateStyle(newObj) {
                if (newObj) {
                  if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
                    return;
                  update(obj = newObj);
                } else {
                  remove();
                }
              };
            }
            var replaceText = /* @__PURE__ */ function() {
              var textStore = [];
              return function(index, replacement) {
                textStore[index] = replacement;
                return textStore.filter(Boolean).join("\n");
              };
            }();
            function applyToSingletonTag(styleElement, index, remove, obj) {
              var css = remove ? "" : obj.css;
              if (styleElement.styleSheet) {
                styleElement.styleSheet.cssText = replaceText(index, css);
              } else {
                var cssNode = document.createTextNode(css);
                var childNodes = styleElement.childNodes;
                if (childNodes[index]) styleElement.removeChild(childNodes[index]);
                if (childNodes.length) {
                  styleElement.insertBefore(cssNode, childNodes[index]);
                } else {
                  styleElement.appendChild(cssNode);
                }
              }
            }
            function applyToTag(styleElement, obj) {
              var css = obj.css;
              var media = obj.media;
              var sourceMap = obj.sourceMap;
              if (media) {
                styleElement.setAttribute("media", media);
              }
              if (sourceMap) {
                css += "\n/*# sourceURL=" + sourceMap.sources[0] + " */";
                css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
              }
              if (styleElement.styleSheet) {
                styleElement.styleSheet.cssText = css;
              } else {
                while (styleElement.firstChild) {
                  styleElement.removeChild(styleElement.firstChild);
                }
                styleElement.appendChild(document.createTextNode(css));
              }
            }
          },
          /* 6 */
          /***/
          function(module2, exports2) {
            "use strict";
            Object.defineProperty(exports2, "__esModule", {
              value: true
            });
            exports2.default = {
              data: function data() {
                return {};
              },
              props: {
                start: {
                  type: Number,
                  default: 0
                },
                end: {
                  type: Number,
                  required: true
                },
                decimal: {
                  type: Number,
                  default: 0
                },
                duration: {
                  type: Number,
                  default: 2.5
                },
                options: {
                  type: Object
                }
              },
              computed: {
                startValue: function startValue() {
                  return this.start;
                },
                endValue: function endValue() {
                  return this.end;
                },
                decimalValue: function decimalValue() {
                  return this.decimal;
                },
                durationValue: function durationValue() {
                  return this.duration;
                }
              },
              ready: function ready() {
                var oCountUp = new CountUp(this.$el, this.startValue, this.endValue, this.decimalValue, this.durationValue, this.options);
                oCountUp.start();
              }
            };
          },
          /* 7 */
          /***/
          function(module2, exports2) {
            module2.exports = "\n<span></span>\n";
          }
          /******/
        ])
      );
    });
  }
});
export default require_vue_count_up();
//# sourceMappingURL=vue-countup.js.map
